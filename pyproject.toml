[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "holo-code-gen"
version = "0.1.0"
description = "Code-first HLS toolchain for mapping compute graphs to photonic integrated circuits"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
keywords = ["photonics", "neural networks", "hls", "integrated circuits", "neuromorphic"]
authors = [
    {name = "Daniel Schmidt", email = "daniel@yourcompany.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "numpy>=1.24.0",
    "scipy>=1.10.0",
    "torch>=2.0.0",
    "networkx>=3.0",
    "pydantic>=2.0.0",
    "typer>=0.9.0",
    "rich>=13.0.0",
    "gdstk>=0.9.0",
    "matplotlib>=3.7.0",
    "pandas>=2.0.0",
]

[project.optional-dependencies]
simulation = [
    "meep>=1.25.0",
    "scikit-rf>=0.29.0",
    "photonics-toolkit>=0.1.0",
]
foundry = [
    "klayout>=0.28.0",
    "siepic>=0.5.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",
]
full = [
    "holo-code-gen[simulation,foundry,dev]",
]

[project.urls]
Homepage = "https://github.com/yourusername/holo-code-gen"
Documentation = "https://holo-code-gen.readthedocs.io"
Repository = "https://github.com/yourusername/holo-code-gen.git"
"Bug Tracker" = "https://github.com/yourusername/holo-code-gen/issues"

[project.scripts]
holo-code-gen = "holo_code_gen.cli:main"

# Development scripts for convenience
[project.optional-dependencies.scripts]
test = "pytest tests/ -v"
lint = "ruff check . && mypy holo_code_gen"
format = "ruff format . && ruff --fix ."
docs = "sphinx-build docs docs/_build/html"
clean = "find . -type d -name '__pycache__' -exec rm -rf {} + && find . -name '*.pyc' -delete"

[tool.hatch.version]
path = "holo_code_gen/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["holo_code_gen"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m "not slow"')",
    "photonic: marks tests that require photonic simulation",
    "foundry: marks tests that require foundry PDKs",
]

[tool.coverage.run]
source = ["holo_code_gen"]
omit = [
    "*/tests/*",
    "*/examples/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\):",
    "@(abc\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  docs/
  | examples/
  | build/
)/
'''

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["S101"]

[tool.bandit]
configfile = "security/configs/bandit.yml"
skip = ["B101"]  # Allow asserts in non-production code
exclude_dirs = ["tests", "docs", "examples"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "meep.*",
    "gdstk.*",
    "klayout.*",
    "siepic.*",
    "scikit_rf.*",
    "photonics_toolkit.*",
]
ignore_missing_imports = true